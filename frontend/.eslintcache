[{"/home/jafor/Desktop/resume-builder/frontend/src/index.js":"1","/home/jafor/Desktop/resume-builder/frontend/src/App.js":"2","/home/jafor/Desktop/resume-builder/frontend/src/reportWebVitals.js":"3","/home/jafor/Desktop/resume-builder/frontend/src/components/NavBar/NavBar.js":"4","/home/jafor/Desktop/resume-builder/frontend/src/components/resume/resume.js":"5","/home/jafor/Desktop/resume-builder/frontend/src/components/form/form.js":"6","/home/jafor/Desktop/resume-builder/frontend/src/components/form/generalForm.js":"7","/home/jafor/Desktop/resume-builder/frontend/src/components/form/socialMedia.js":"8","/home/jafor/Desktop/resume-builder/frontend/src/components/form/educationForm.js":"9","/home/jafor/Desktop/resume-builder/frontend/src/components/form/experienceForm.js":"10","/home/jafor/Desktop/resume-builder/frontend/src/components/form/gf.js":"11","/home/jafor/Desktop/resume-builder/frontend/src/components/form/expertiseForm.js":"12"},{"size":427,"mtime":1632061626000,"results":"13","hashOfConfig":"14"},{"size":525,"mtime":1632061626000,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1632061626000,"results":"16","hashOfConfig":"14"},{"size":2251,"mtime":1632061626000,"results":"17","hashOfConfig":"14"},{"size":10263,"mtime":1632061626000,"results":"18","hashOfConfig":"14"},{"size":2748,"mtime":1665251617168,"results":"19","hashOfConfig":"14"},{"size":4977,"mtime":1665235188332,"results":"20","hashOfConfig":"14"},{"size":2454,"mtime":1665237122690,"results":"21","hashOfConfig":"14"},{"size":4150,"mtime":1665232167923,"results":"22","hashOfConfig":"14"},{"size":3634,"mtime":1665234810747,"results":"23","hashOfConfig":"14"},{"size":2248,"mtime":1665227471272,"results":"24","hashOfConfig":"14"},{"size":2565,"mtime":1665238565981,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"zdz4oe",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"/home/jafor/Desktop/resume-builder/frontend/src/index.js",[],["53","54"],"/home/jafor/Desktop/resume-builder/frontend/src/App.js",[],"/home/jafor/Desktop/resume-builder/frontend/src/reportWebVitals.js",[],"/home/jafor/Desktop/resume-builder/frontend/src/components/NavBar/NavBar.js",[],"/home/jafor/Desktop/resume-builder/frontend/src/components/resume/resume.js",[],"/home/jafor/Desktop/resume-builder/frontend/src/components/form/form.js",[],"/home/jafor/Desktop/resume-builder/frontend/src/components/form/generalForm.js",[],"/home/jafor/Desktop/resume-builder/frontend/src/components/form/socialMedia.js",[],"/home/jafor/Desktop/resume-builder/frontend/src/components/form/educationForm.js",["55","56","57","58"],"import React from 'react'\nimport {\n    Container,\n    Form,\n    Col,\n    FormGroup,\n    FormLabel,\n    FormControl,\n    Button,\n  } from \"react-bootstrap\";\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\nimport Icon from '@material-ui/core/Icon';\nimport { v4 as uuidv4 } from 'uuid';\n  import { useState } from \"react\";\n\nexport const EducationForm = ({inputFields, setInputFields}) => {\n\n  const handleChangeInput = (id, event) => {\n    console.log(id, event.target);\n    const newInputFields = inputFields.map(i => {\n      if(id === i.id) {\n        i[event.target.name] = event.target.value\n      }\n      return i;\n    })\n    \n    setInputFields(newInputFields);\n  }\n\n  const handleAddFields = () => {\n    setInputFields([...inputFields, { id: uuidv4(),  firstName: '', lastName: '' }])\n  }\n\n  const handleRemoveFields = id => {\n    const values  = [...inputFields];\n    values.splice(values.findIndex(value => value.id === id), 1);\n    setInputFields(values);\n  }\n\n  return (\n    <div>\n        <h1 className=\"text-dark font-weight-bold py-4\">\n          Educational Details\n        </h1>\n        { inputFields.map(inputField => (\n          <div key={inputField.id}> \n                <Form.Row>\n          <FormGroup as={Col} sm={12} md={6}>\n            <FormLabel> Education Title (School, College or Others) </FormLabel>\n            <FormControl\n              name=\"edutitle\"\n              type=\"text\"\n              placeholder=\"e.g School, College, University\"\n              onChange={event => handleChangeInput(inputField.id, event)}\n              value={inputField.edutitle}\n              required\n            />\n          </FormGroup>\n\n        </Form.Row>\n        <Form.Row>\n          <FormGroup as={Col} sm={12} md={6}>\n            <FormLabel> {inputField.edutitle} degree </FormLabel>\n            <FormControl\n              name=\"edudegree\"\n              type=\"text\"\n              placeholder=\"e.g metric with computer sciences\"\n              onChange={event => handleChangeInput(inputField.id, event)}\n              value={inputField.edudegree}\n              required\n            />\n          </FormGroup>\n          <FormGroup as={Col} sm={12} md={6}>\n            <FormLabel> {inputField.edutitle} Name </FormLabel>\n            <FormControl\n              name=\"eduinstitute\"\n              type=\"text\"\n              placeholder=\"e.g govt school\"\n              onChange={event => handleChangeInput(inputField.id, event)}\n              value={inputField.eduinstitute}\n              required\n            />\n          </FormGroup>\n        </Form.Row>\n        <Form.Row>\n          <FormGroup as={Col} sm={12} md={4}>\n            <FormLabel>Starting Date</FormLabel>\n            <FormControl\n              name=\"edustart\"\n              type=\"date\"\n              onChange={event => handleChangeInput(inputField.id, event)}\n              value={inputField.edustart}\n              required\n            />\n          </FormGroup>\n          <FormGroup as={Col} sm={12} md={4}>\n            <FormLabel>Ending Date</FormLabel>\n            <FormControl\n            name=\"eduend\"\n              type=\"date\"\n              onChange={event => handleChangeInput(inputField.id, event)}\n              value={inputField.eduend}\n              required\n            />\n          </FormGroup>\n          <FormGroup as={Col} sm={12}>\n            <FormLabel>Describe your {inputField.edutitle}'s experience</FormLabel>\n            <Form.Control\n            name=\"edudescrib\"\n              as=\"textarea\"\n              rows={6}\n              onChange={event => handleChangeInput(inputField.id, event)}\n              value={inputField.edudescrib}\n              required\n            />\n          </FormGroup>\n        </Form.Row>\n        <div className=\"text-center\">\n        <IconButton disabled={inputFields.length === 1} onClick={() => handleRemoveFields(inputField.id)}>\n        <RemoveIcon />\n      </IconButton>\n      <IconButton\n        onClick={handleAddFields}\n      >\n        <AddIcon />\n      </IconButton>\n      </div>\n        </div>\n        ))}\n    </div>\n  )\n}\n","/home/jafor/Desktop/resume-builder/frontend/src/components/form/experienceForm.js",[],"/home/jafor/Desktop/resume-builder/frontend/src/components/form/gf.js",["59","60","61"],"/home/jafor/Desktop/resume-builder/frontend/src/components/form/expertiseForm.js",["62","63"],"import React from 'react'\nimport {\n  Form,\n  Col,\n  FormGroup,\n  FormLabel,\n  FormControl,\n\n} from \"react-bootstrap\";\n\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { v4 as uuidv4 } from 'uuid';\n\n  import { useState } from \"react\";\n\nexport const ExpertiseForm = ({inputFields, setInputFields}) => {\n  const handleChangeInput = (id, event) => {\n    const newInputFields = inputFields.map(i => {\n      if(id === i.id) {\n        i[event.target.name] = event.target.value\n      }\n      return i;\n    })\n    \n    setInputFields(newInputFields);\n  }\n\n  const handleAddFields = () => {\n    setInputFields([...inputFields, { id: uuidv4(),  firstName: '', lastName: '' }])\n  }\n\n  const handleRemoveFields = id => {\n    const values  = [...inputFields];\n    values.splice(values.findIndex(value => value.id === id), 1);\n    setInputFields(values);\n  }\n  const [userSkills, setUserSkills] = useState(\"\");\n  const handleUserSkills = (e) => {\n    setUserSkills(e.target.value);\n  };\n  return (\n    <div>\n      <h1 className=\"text-dark font-weight-bold py-4\">Social Details</h1>\n        { inputFields.map((inputField, index) => (\n          <div key={inputField.id}> \n\n      <Form.Row>\n          <FormGroup as={Col} sm={12} md={6}>\n            <FormLabel>{index+1}{ (index === 0) ? \"st \" : (index === 1) ? \"nd \" : (index === 2) ? \"rd \" : \"th \"}Skill Type</FormLabel>\n            <FormControl\n              name=\"skilltype\"\n              type=\"text\"\n              placeholder=\"Programming Language\"\n              onChange={event => handleChangeInput(inputField.id, event)}\n              value={inputField.skilltype}\n              required\n            />\n          </FormGroup>\n          <FormGroup as={Col} sm={12} md={6}>\n            <FormLabel>Write Your Skills</FormLabel>\n            <FormControl\n              name=\"skillsets\"\n              type=\"text\"\n              placeholder=\"e.g HTML|CSS|REACTJS|NODEJS|EXPRESSJS\"\n              onChange={event => handleChangeInput(inputField.id, event)}\n              value={inputField.skillsets}\n              required\n            />\n          </FormGroup>\n        </Form.Row>\n\n        <div className=\"text-center\">\n        <IconButton disabled={inputFields.length === 1} onClick={() => handleRemoveFields(inputField.id)}>\n        <RemoveIcon />\n      </IconButton>\n      <IconButton\n        onClick={handleAddFields}\n      >\n        <AddIcon />\n      </IconButton>\n      </div>\n      \n        </div>))}\n    </div>\n  )\n}\n",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":3,"column":5,"nodeType":"70","messageId":"71","endLine":3,"endColumn":14},{"ruleId":"68","severity":1,"message":"72","line":9,"column":5,"nodeType":"70","messageId":"71","endLine":9,"endColumn":11},{"ruleId":"68","severity":1,"message":"73","line":14,"column":8,"nodeType":"70","messageId":"71","endLine":14,"endColumn":12},{"ruleId":"68","severity":1,"message":"74","line":16,"column":12,"nodeType":"70","messageId":"71","endLine":16,"endColumn":20},{"ruleId":"68","severity":1,"message":"72","line":8,"column":5,"nodeType":"70","messageId":"71","endLine":8,"endColumn":11},{"ruleId":"68","severity":1,"message":"73","line":13,"column":8,"nodeType":"70","messageId":"71","endLine":13,"endColumn":12},{"ruleId":"68","severity":1,"message":"75","line":17,"column":10,"nodeType":"70","messageId":"71","endLine":17,"endColumn":15},{"ruleId":"68","severity":1,"message":"76","line":40,"column":10,"nodeType":"70","messageId":"71","endLine":40,"endColumn":20},{"ruleId":"68","severity":1,"message":"77","line":41,"column":9,"nodeType":"70","messageId":"71","endLine":41,"endColumn":25},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Icon' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'userSkills' is assigned a value but never used.","'handleUserSkills' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]